<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/novelonline/fragments/ReadChapterFragment.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/novelonline/fragments/ReadChapterFragment.kt" />
              <option name="originalContent" value="package com.example.novelonline.fragments // Adjust package as needed&#10;&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import androidx.core.content.ContextCompat&#10;import androidx.fragment.app.Fragment&#10;import androidx.navigation.fragment.findNavController&#10;import com.example.novelonline.R&#10;import com.example.novelonline.databinding.FragmentReadChapterBinding&#10;&#10;class ReadChapterFragment : Fragment() {&#10;&#10;    // Use a nullable binding to prevent memory leaks, and a non-null accessor for convenience.&#10;    private var _binding: FragmentReadChapterBinding? = null&#10;    private val binding get() = _binding!!&#10;&#10;    // Properties to hold the novel and chapter IDs&#10;    private var novelId: String? = null&#10;    private var chapterId: String? = null&#10;&#10;    // Use `sp` for font size to respect user settings, and manage it as a float.&#10;    private var currentFontSizeSp: Float = 18f&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        // Retrieve the arguments, which is the correct place for this.&#10;        arguments?.let {&#10;            novelId = it.getString(ARG_NOVEL_ID)&#10;            chapterId = it.getString(ARG_CHAPTER_ID)&#10;        }&#10;    }&#10;&#10;    override fun onCreateView(&#10;        inflater: LayoutInflater, container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View {&#10;        // Inflate the layout using View Binding.&#10;        _binding = FragmentReadChapterBinding.inflate(inflater, container, false)&#10;        return binding.root&#10;    }&#10;&#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        super.onViewCreated(view, savedInstanceState)&#10;        setupClickListeners()&#10;        // TODO: fetchChapterContent(novelId, chapterId)&#10;    }&#10;&#10;    private fun setupClickListeners() {&#10;        // Back button to navigate back&#10;        binding.toolbar.findViewById&lt;View&gt;(R.id.backButton).setOnClickListener {&#10;            findNavController().popBackStack()&#10;        }&#10;&#10;        // Settings button toggle&#10;        binding.settingsButton.setOnClickListener {&#10;            toggleSettingsPanelVisibility()&#10;        }&#10;&#10;        // Font size controls&#10;        binding.increaseFontButton.setOnClickListener {&#10;            if (currentFontSizeSp &lt; 32f) {&#10;                currentFontSizeSp += 2f&#10;                binding.contentTextView.textSize = currentFontSizeSp&#10;            }&#10;        }&#10;&#10;        binding.decreaseFontButton.setOnClickListener {&#10;            if (currentFontSizeSp &gt; 12f) {&#10;                currentFontSizeSp -= 2f&#10;                binding.contentTextView.textSize = currentFontSizeSp&#10;            }&#10;        }&#10;&#10;        // Theme controls&#10;        binding.lightModeButton.setOnClickListener {&#10;            setTheme(isDarkMode = false)&#10;        }&#10;        binding.darkModeButton.setOnClickListener {&#10;            setTheme(isDarkMode = true)&#10;        }&#10;    }&#10;&#10;    private fun toggleSettingsPanelVisibility() {&#10;        binding.settingsPanel.visibility =&#10;            if (binding.settingsPanel.visibility == View.GONE) View.VISIBLE else View.GONE&#10;    }&#10;&#10;    private fun setTheme(isDarkMode: Boolean) {&#10;        if (isDarkMode) {&#10;            binding.readerContainer.setBackgroundColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_dark_bg)&#10;            )&#10;            binding.contentTextView.setTextColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_dark_text)&#10;            )&#10;            binding.chapterTitleTextView.setTextColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_dark_text)&#10;            )&#10;            binding.backButton.setColorFilter(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_dark_text),&#10;                android.graphics.PorterDuff.Mode.SRC_IN&#10;            )&#10;            binding.settingsButton.setColorFilter(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_dark_text),&#10;                android.graphics.PorterDuff.Mode.SRC_IN&#10;            )&#10;            binding.settingsPanel.setBackgroundColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_dark_panel_bg)&#10;            )&#10;        } else {&#10;            binding.readerContainer.setBackgroundColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_light_bg)&#10;            )&#10;            binding.contentTextView.setTextColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_light_text)&#10;            )&#10;            binding.chapterTitleTextView.setTextColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_light_text)&#10;            )&#10;            binding.backButton.setColorFilter(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_light_text),&#10;                android.graphics.PorterDuff.Mode.SRC_IN&#10;            )&#10;            binding.settingsButton.setColorFilter(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_light_text),&#10;                android.graphics.PorterDuff.Mode.SRC_IN&#10;            )&#10;            binding.settingsPanel.setBackgroundColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_panel_bg)&#10;            )&#10;        }&#10;    }&#10;&#10;    private fun fetchChapterContent(novelId: String?, chapterId: String?) {&#10;        if (novelId == null || chapterId == null) {&#10;            // Handle missing arguments&#10;            return&#10;        }&#10;&#10;        // TODO: Implement logic to fetch chapter content from Firebase or repository&#10;        binding.chapterTitleTextView.text = &quot;Chapter 1: The Beginning&quot;&#10;        binding.contentTextView.text = getString(R.string.placeholder_chapter_content)&#10;    }&#10;&#10;    override fun onDestroyView() {&#10;        super.onDestroyView()&#10;        _binding = null // Prevent memory leaks&#10;    }&#10;&#10;    companion object {&#10;        const val ARG_NOVEL_ID = &quot;novelId&quot;&#10;        const val ARG_CHAPTER_ID = &quot;chapterId&quot;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.novelonline.fragments // Adjust package as needed&#10;&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import androidx.core.content.ContextCompat&#10;import androidx.fragment.app.Fragment&#10;import androidx.navigation.fragment.findNavController&#10;import com.example.novelonline.R&#10;import com.example.novelonline.databinding.FragmentReadChapterBinding&#10;import com.github.barteksc.pdfviewer.PDFView&#10;import com.google.firebase.storage.FirebaseStorage&#10;import java.io.File&#10;&#10;class ReadChapterFragment : Fragment() {&#10;&#10;    // Use a nullable binding to prevent memory leaks, and a non-null accessor for convenience.&#10;    private var _binding: FragmentReadChapterBinding? = null&#10;    private val binding get() = _binding!!&#10;&#10;    // Properties to hold the novel and chapter IDs&#10;    private var novelId: String? = null&#10;    private var chapterId: String? = null&#10;&#10;    // Use `sp` for font size to respect user settings, and manage it as a float.&#10;    private var currentFontSizeSp: Float = 18f&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        // Retrieve the arguments, which is the correct place for this.&#10;        arguments?.let {&#10;            novelId = it.getString(ARG_NOVEL_ID)&#10;            chapterId = it.getString(ARG_CHAPTER_ID)&#10;        }&#10;    }&#10;&#10;    override fun onCreateView(&#10;        inflater: LayoutInflater, container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View {&#10;        // Inflate the layout using View Binding.&#10;        _binding = FragmentReadChapterBinding.inflate(inflater, container, false)&#10;        return binding.root&#10;    }&#10;&#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        super.onViewCreated(view, savedInstanceState)&#10;        setupClickListeners()&#10;        fetchChapterContent(novelId, chapterId)&#10;    }&#10;&#10;    private fun setupClickListeners() {&#10;        // Back button to navigate back&#10;        binding.toolbar.findViewById&lt;View&gt;(R.id.backButton).setOnClickListener {&#10;            findNavController().popBackStack()&#10;        }&#10;&#10;        // Settings button toggle&#10;        binding.settingsButton.setOnClickListener {&#10;            toggleSettingsPanelVisibility()&#10;        }&#10;&#10;        // Font size controls&#10;        binding.increaseFontButton.setOnClickListener {&#10;            if (currentFontSizeSp &lt; 32f) {&#10;                currentFontSizeSp += 2f&#10;                binding.contentTextView.textSize = currentFontSizeSp&#10;            }&#10;        }&#10;&#10;        binding.decreaseFontButton.setOnClickListener {&#10;            if (currentFontSizeSp &gt; 12f) {&#10;                currentFontSizeSp -= 2f&#10;                binding.contentTextView.textSize = currentFontSizeSp&#10;            }&#10;        }&#10;&#10;        // Theme controls&#10;        binding.lightModeButton.setOnClickListener {&#10;            setTheme(isDarkMode = false)&#10;        }&#10;        binding.darkModeButton.setOnClickListener {&#10;            setTheme(isDarkMode = true)&#10;        }&#10;    }&#10;&#10;    private fun toggleSettingsPanelVisibility() {&#10;        binding.settingsPanel.visibility =&#10;            if (binding.settingsPanel.visibility == View.GONE) View.VISIBLE else View.GONE&#10;    }&#10;&#10;    private fun setTheme(isDarkMode: Boolean) {&#10;        if (isDarkMode) {&#10;            binding.readerContainer.setBackgroundColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_dark_bg)&#10;            )&#10;            binding.contentTextView.setTextColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_dark_text)&#10;            )&#10;            binding.chapterTitleTextView.setTextColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_dark_text)&#10;            )&#10;            binding.backButton.setColorFilter(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_dark_text),&#10;                android.graphics.PorterDuff.Mode.SRC_IN&#10;            )&#10;            binding.settingsButton.setColorFilter(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_dark_text),&#10;                android.graphics.PorterDuff.Mode.SRC_IN&#10;            )&#10;            binding.settingsPanel.setBackgroundColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_dark_panel_bg)&#10;            )&#10;        } else {&#10;            binding.readerContainer.setBackgroundColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_light_bg)&#10;            )&#10;            binding.contentTextView.setTextColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_light_text)&#10;            )&#10;            binding.chapterTitleTextView.setTextColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_light_text)&#10;            )&#10;            binding.backButton.setColorFilter(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_light_text),&#10;                android.graphics.PorterDuff.Mode.SRC_IN&#10;            )&#10;            binding.settingsButton.setColorFilter(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_light_text),&#10;                android.graphics.PorterDuff.Mode.SRC_IN&#10;            )&#10;            binding.settingsPanel.setBackgroundColor(&#10;                ContextCompat.getColor(requireContext(), R.color.reader_panel_bg)&#10;            )&#10;        }&#10;    }&#10;&#10;    private fun fetchChapterContent(novelId: String?, chapterId: String?) {&#10;        if (novelId == null || chapterId == null) {&#10;            // Handle missing arguments&#10;            return&#10;        }&#10;&#10;        // Example: Assume PDF is stored at &quot;novels/{novelId}/chapters/{chapterId}.pdf&quot;&#10;        val storageRef = FirebaseStorage.getInstance().reference&#10;            .child(&quot;novels/$novelId/chapters/$chapterId.pdf&quot;)&#10;&#10;        // Show loading indicator if needed&#10;&#10;        // Download PDF to a temp file&#10;        val localFile = File.createTempFile(&quot;chapter&quot;, &quot;.pdf&quot;)&#10;        storageRef.getFile(localFile)&#10;            .addOnSuccessListener {&#10;                // Hide text content, show PDFView&#10;                binding.contentScrollView.visibility = View.GONE&#10;                binding.pdfView.visibility = View.VISIBLE&#10;                binding.pdfView.fromFile(localFile)&#10;                    .enableSwipe(true)&#10;                    .swipeHorizontal(false)&#10;                    .enableDoubletap(true)&#10;                    .defaultPage(0)&#10;                    .load()&#10;                // Optionally set chapter title&#10;                binding.chapterTitleTextView.text = &quot;Chapter $chapterId&quot;&#10;            }&#10;            .addOnFailureListener {&#10;                // If PDF not found, fallback to text content or show error&#10;                binding.pdfView.visibility = View.GONE&#10;                binding.contentScrollView.visibility = View.VISIBLE&#10;                binding.chapterTitleTextView.text = &quot;Chapter $chapterId&quot;&#10;                binding.contentTextView.text = getString(R.string.placeholder_chapter_content)&#10;            }&#10;    }&#10;&#10;    override fun onDestroyView() {&#10;        super.onDestroyView()&#10;        _binding = null // Prevent memory leaks&#10;    }&#10;&#10;    companion object {&#10;        const val ARG_NOVEL_ID = &quot;novelId&quot;&#10;        const val ARG_CHAPTER_ID = &quot;chapterId&quot;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_read_chapter.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_read_chapter.xml" />
              <option name="originalContent" value="&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/readerContainer&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/reader_light_bg&quot;&#10;    tools:context=&quot;.fragments.ReadChapterFragment&quot;&gt;&#10;&#10;    &lt;!-- Top Bar --&gt;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:id=&quot;@+id/appBarLayout&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;@android:color/transparent&quot;&#10;        app:elevation=&quot;0dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/backButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;start&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:src=&quot;@drawable/ic_arrow_back&quot;&#10;                app:tint=&quot;@color/reader_light_text&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/chapterTitleTextView&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;center&quot;&#10;                android:textColor=&quot;@color/reader_light_text&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                tools:text=&quot;Chapter 1&quot; /&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/settingsButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;end&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:layout_marginEnd=&quot;16dp&quot;&#10;                android:src=&quot;@drawable/settings&quot;&#10;                app:tint=&quot;@color/reader_light_text&quot; /&gt;&#10;&#10;        &lt;/androidx.appcompat.widget.Toolbar&gt;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;!-- Scrolling Text Content --&gt;&#10;    &lt;androidx.core.widget.NestedScrollView&#10;        android:id=&quot;@+id/contentScrollView&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/appBarLayout&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/contentTextView&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:lineSpacingMultiplier=&quot;1.5&quot;&#10;            android:padding=&quot;24dp&quot;&#10;            android:background=&quot;@color/reader_light_bg&quot;&#10;            android:textColor=&quot;@color/reader_light_text&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            tools:text=&quot;@tools:sample/lorem/random&quot; /&gt;&#10;    &lt;/androidx.core.widget.NestedScrollView&gt;&#10;&#10;    &lt;!-- Settings Panel (Initially Hidden) --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/settingsPanel&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;@drawable/rounded_background&quot;&#10;        android:backgroundTint=&quot;@color/reader_panel_bg&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&#10;        android:elevation=&quot;8dp&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        tools:visibility=&quot;visible&quot;&gt;&#10;&#10;        &lt;!-- Font Size Control --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:gravity=&quot;center_vertical&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/fontSizeLabel&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Font Size&quot;&#10;                android:textColor=&quot;@color/reader_light_text&quot;&#10;                android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/decreaseFontButton&quot;&#10;                style=&quot;@style/Widget.Material3.Button.TextButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;A-&quot;&#10;                android:textColor=&quot;@color/reader_light_text&quot;&#10;                android:textSize=&quot;18sp&quot; /&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/increaseFontButton&quot;&#10;                style=&quot;@style/Widget.Material3.Button.TextButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;A+&quot;&#10;                android:textColor=&quot;@color/reader_light_text&quot;&#10;                android:textSize=&quot;18sp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Theme Control --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;16dp&quot;&#10;            android:gravity=&quot;center_vertical&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/themeLabel&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Theme&quot;&#10;                android:textColor=&quot;@color/reader_light_text&quot;&#10;                android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;            &lt;ImageButton&#10;                android:id=&quot;@+id/lightModeButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:src=&quot;@drawable/light_mode&quot;&#10;                app:tint=&quot;@color/reader_light_text&quot; /&gt;&#10;&#10;            &lt;ImageButton&#10;                android:id=&quot;@+id/darkModeButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:src=&quot;@drawable/dark_mode&quot;&#10;                app:tint=&quot;@color/reader_light_text&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/readerContainer&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/reader_light_bg&quot;&#10;    tools:context=&quot;.fragments.ReadChapterFragment&quot;&gt;&#10;&#10;    &lt;!-- Top Bar --&gt;&#10;    &lt;com.google.android.material.appbar.AppBarLayout&#10;        android:id=&quot;@+id/appBarLayout&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;@android:color/transparent&quot;&#10;        app:elevation=&quot;0dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;?attr/actionBarSize&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/backButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;start&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:src=&quot;@drawable/ic_arrow_back&quot;&#10;                app:tint=&quot;@color/reader_light_text&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/chapterTitleTextView&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;center&quot;&#10;                android:textColor=&quot;@color/reader_light_text&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                tools:text=&quot;Chapter 1&quot; /&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/settingsButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;end&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:layout_marginEnd=&quot;16dp&quot;&#10;                android:src=&quot;@drawable/settings&quot;&#10;                app:tint=&quot;@color/reader_light_text&quot; /&gt;&#10;&#10;        &lt;/androidx.appcompat.widget.Toolbar&gt;&#10;    &lt;/com.google.android.material.appbar.AppBarLayout&gt;&#10;&#10;    &lt;!-- Scrolling Text Content --&gt;&#10;    &lt;androidx.core.widget.NestedScrollView&#10;        android:id=&quot;@+id/contentScrollView&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/appBarLayout&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/contentTextView&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:lineSpacingMultiplier=&quot;1.5&quot;&#10;            android:padding=&quot;24dp&quot;&#10;            android:background=&quot;@color/reader_light_bg&quot;&#10;            android:textColor=&quot;@color/reader_light_text&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            tools:text=&quot;@tools:sample/lorem/random&quot; /&gt;&#10;    &lt;/androidx.core.widget.NestedScrollView&gt;&#10;&#10;    &lt;!-- Settings Panel (Initially Hidden) --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/settingsPanel&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;@drawable/rounded_background&quot;&#10;        android:backgroundTint=&quot;@color/reader_panel_bg&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&#10;        android:elevation=&quot;8dp&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        tools:visibility=&quot;visible&quot;&gt;&#10;&#10;        &lt;!-- Font Size Control --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:gravity=&quot;center_vertical&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/fontSizeLabel&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Font Size&quot;&#10;                android:textColor=&quot;@color/reader_light_text&quot;&#10;                android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/decreaseFontButton&quot;&#10;                style=&quot;@style/Widget.Material3.Button.TextButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;A-&quot;&#10;                android:textColor=&quot;@color/reader_light_text&quot;&#10;                android:textSize=&quot;18sp&quot; /&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/increaseFontButton&quot;&#10;                style=&quot;@style/Widget.Material3.Button.TextButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;A+&quot;&#10;                android:textColor=&quot;@color/reader_light_text&quot;&#10;                android:textSize=&quot;18sp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Theme Control --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;16dp&quot;&#10;            android:gravity=&quot;center_vertical&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/themeLabel&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Theme&quot;&#10;                android:textColor=&quot;@color/reader_light_text&quot;&#10;                android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;            &lt;ImageButton&#10;                android:id=&quot;@+id/lightModeButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:src=&quot;@drawable/light_mode&quot;&#10;                app:tint=&quot;@color/reader_light_text&quot; /&gt;&#10;&#10;            &lt;ImageButton&#10;                android:id=&quot;@+id/darkModeButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;16dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                android:padding=&quot;8dp&quot;&#10;                android:src=&quot;@drawable/dark_mode&quot;&#10;                app:tint=&quot;@color/reader_light_text&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>